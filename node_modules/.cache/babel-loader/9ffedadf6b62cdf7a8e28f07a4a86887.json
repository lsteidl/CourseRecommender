{"ast":null,"code":"var _jsxFileName = \"/Users/luke/Documents/639-h5/recommender/src/CourseInfo.js\";\nimport React from 'react';\nimport './App.css';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Accordion from 'react-bootstrap/Accordion';\n\nclass Course extends React.Component {\n  render() {\n    return React.createElement(Card, {\n      style: {\n        width: '33%',\n        marginTop: '5px',\n        marginBottom: '5px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, React.createElement(Card.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, this.props.data.name), React.createElement(Card.Subtitle, {\n      className: \"mb-2 text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, this.props.data.number, \" - \", this.getCredits()), React.createElement(Button, {\n      variant: \"primary\",\n      onClick: () => this.props.setCart(this.props.data),\n      style: {\n        margin: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, \" All \"), React.createElement(Accordion, {\n      defaultActiveKey: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, this.getSections())));\n  }\n\n  getSections() {\n    let cards = [];\n\n    for (const section of Object.entries(this.props.data.sections)) {\n      cards.push(React.createElement(Card, {\n        key: section[0],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(Card.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(Accordion.Toggle, {\n        as: Button,\n        variant: \"link\",\n        eventKey: section[0],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, section[0])), React.createElement(Accordion.Collapse, {\n        eventKey: section[0],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: () => this.props.setCart(this.props.data),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \" Add All\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), section[1].instructor, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), section[1].location, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \" Time: \"), this.cleanString(JSON.stringify(section[1].time)), React.createElement(Accordion, {\n        defaultActiveKey: \"0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, this.getSubsections(section))))));\n    }\n\n    return cards;\n  }\n\n  getSubsections(section) {\n    // console.log(section)\n    let subs = [];\n\n    for (const subsection of Object.entries(section[1].subsections)) {\n      subs.push(React.createElement(Card, {\n        key: subsection[0],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(Card.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Accordion.Toggle, {\n        as: Button,\n        variant: \"link\",\n        eventKey: subsection[0],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, subsection[0])), React.createElement(Accordion.Collapse, {\n        eventKey: subsection[0],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: () => this.props.setCart(this.props.data),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \" Add Sub\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Time:\"), this.cleanString(JSON.stringify(subsection[1].time))))));\n    }\n\n    return subs;\n  } ///? ?? ? ?\n\n  /*\n  addCourse(){\n    this.props.setCart()(\n      (\n        course: this.props.key\n      )\n    );\n  }\n  */\n\n\n  getCredits() {\n    if (this.props.data.credits === 1) return '1 credit';else return this.props.data.credits + ' credits';\n  }\n\n  capitalize(word) {\n    let newword = word.charAt(0).toUpperCase() + word.slice(1);\n    return newword;\n  }\n\n  cleanString(str) {\n    str = str.substring(1, str.length - 1);\n    let days = str.split(',');\n    let times = [];\n\n    for (let i = 0; i < days.length; i++) {\n      // days[i] = days[i].charAt(0).toUpperCase() + days[i].slice(1);\n      times.push(days[i].split('\"'));\n    }\n\n    let ret = []; //console.log(\"TIMES: \" + times[0]);\n\n    for (let i = 0; i < days.length; i++) {\n      // times[i] = times[i].charAt(0).toUpperCase() + days[i].slice(1);\n      ret.push(React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \" \", times[i], \" \") //{times[i+2]} </p>\n      );\n    }\n\n    return ret;\n  }\n\n}\n\nexport default Course;","map":{"version":3,"sources":["/Users/luke/Documents/639-h5/recommender/src/CourseInfo.js"],"names":["React","Card","Button","Accordion","Course","Component","render","width","marginTop","marginBottom","props","data","name","number","getCredits","setCart","margin","getSections","cards","section","Object","entries","sections","push","instructor","location","cleanString","JSON","stringify","time","getSubsections","subs","subsection","subsections","credits","capitalize","word","newword","charAt","toUpperCase","slice","str","substring","length","days","split","times","i","ret"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Accordion from 'react-bootstrap/Accordion';\n\nclass Course extends React.Component {\n  render() {\n    return (\n      <Card style={{width: '33%', marginTop: '5px', marginBottom: '5px'}}>\n        <Card.Body >\n\n          <Card.Title>{this.props.data.name}</Card.Title>\n          <Card.Subtitle className=\"mb-2 text-muted\">{this.props.data.number} - {this.getCredits()}</Card.Subtitle>\n          <Button variant = \"primary\" onClick={() => this.props.setCart(this.props.data)} style = {{margin:\"10px\"}}> All </Button>\n          <Accordion defaultActiveKey=\"0\">\n            {this.getSections()}\n          </Accordion>\n        </Card.Body>\n      </Card>\n    )\n  }\n getSections(){\n  let cards = [];\n  for(const section of Object.entries(this.props.data.sections)){\n    cards.push(\n    <Card key={section[0]}>\n    <Card.Header>\n      <Accordion.Toggle as={Button} variant=\"link\" eventKey={section[0]}>\n      {section[0]}\n      </Accordion.Toggle>\n    </Card.Header>\n    <Accordion.Collapse eventKey={section[0]}>\n      <Card.Body>\n      <Button onClick={() => this.props.setCart(this.props.data)}> Add All</Button> \n          <br />\n          <br/>\n          {section[1].instructor}\n          <br />\n          {section[1].location} \n          <br/>\n          <br/>\n      <p> Time: </p>\n      {this.cleanString(JSON.stringify(section[1].time))}\n     \n      <Accordion defaultActiveKey=\"0\">\n          \n         \n          {this.getSubsections(section)}\n          \n          \n        </Accordion>\n      </Card.Body>\n    </Accordion.Collapse>\n  </Card>\n    )\n\n  }\n  return cards;\n }\n getSubsections(section){\n  // console.log(section)\n   let subs = [];\n   \n    for( const subsection of Object.entries(section[1].subsections)){\n      subs.push(\n        <Card key={subsection[0]}>\n        \n        <Card.Header>\n          <Accordion.Toggle as={Button} variant=\"link\" eventKey={subsection[0]}>\n          {subsection[0]} \n          </Accordion.Toggle>\n        </Card.Header>\n        <Accordion.Collapse eventKey={subsection[0]}>\n          <Card.Body>\n          <Button onClick={() => this.props.setCart(this.props.data)}> Add Sub</Button>\n          <br />\n          <p>Time:</p>\n         {this.cleanString(JSON.stringify(subsection[1].time))}\n          </Card.Body>\n        </Accordion.Collapse>\n      </Card>\n        )\n    }\n    return subs;\n  \n }\n ///? ?? ? ?\n /*\n addCourse(){\n   this.props.setCart()(\n     (\n       course: this.props.key\n     )\n   );\n }\n */\n\n  getCredits() {\n    if(this.props.data.credits === 1)\n      return '1 credit';\n    else\n      return this.props.data.credits + ' credits';\n  }\n  capitalize(word){\n    let newword = word.charAt(0).toUpperCase() + word.slice(1);\n    return newword;\n\n  }\n  cleanString(str){\n    str = str.substring(1,(str.length-1));\n        let days =  str.split(',');\n    let times = [];\n    for(let i = 0; i < days.length; i++){\n     // days[i] = days[i].charAt(0).toUpperCase() + days[i].slice(1);\n      times.push(days[i].split('\"'));\n    }\n    let ret = [];\n    //console.log(\"TIMES: \" + times[0]);\n    for(let i = 0; i < days.length; i++){\n    // times[i] = times[i].charAt(0).toUpperCase() + days[i].slice(1);\n      ret.push(\n        <p> {times[i]} </p>//{times[i+2]} </p>\n      )\n      }\n    return ret;\n\n  }\n\n}\n\nexport default Course;\n"]},"metadata":{},"sourceType":"module"}